#!/usr/bin/env ruby

require 'cucumber-slices'
require 'docopt'

doc = <<DOCOPT
  cucumber-slices

  Usage:
    cucumber-slices <feature_file> [--lines=<line_range>]

  Options:
    -h                    Show this message.
    --version             Show version.
    --lines=<line_range>  Range for feature file.

DOCOPT
# opts = {}
begin
  require "pp"
  opts = Docopt::docopt(doc)
rescue Docopt::Exit => e
  puts e.message
end

if opts['-h']
  puts doc
end

puts opts

if opts['<feature_file>']
  lines_range = nil
  if opts['--lines']
    lines_opt= opts['--lines'].split("-")
    from_to = lines_opt.map {|line_no| line_no.to_i}
    if (from_to.length != 2) or (from_to[0] == from_to[1])
      puts "bad lines arguement #{lines}"
      exit(0)
    end
    lines_range = (from_to[0]..from_to[1])
  end
  cs = CucumberSlices.new

  feature_file = opts['<feature_file>']
  feature_name = File.basename feature_file, '.feature'
  step_file = "#{File.dirname feature_file}/step_definitions/#{feature_name}_steps.rb"
  # also try with a - instead of a _
  if ! File.exists? step_file
    step_file_with_underscore = "#{File.dirname feature_file}/step_definitions/#{feature_name}-steps.rb"
    step_file = step_file_with_underscore if File.exists? step_file_with_underscore
  end

  # catch 'em all!
  # TODO: don't catch them all, just catch file not found
  begin
    open(step_file) do |file|
      cs.extract_steps file
    end

    splice = []
    open(feature_file) do |file|
      splice = cs.splice_features file, lines_range
    end
    puts splice
  rescue IOError
    puts "#{$!}"
    exit(0)
  end

end
